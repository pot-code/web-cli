import { createContext, useContext, useMemo } from 'react'

interface ContextData {}

const Context = createContext<ContextData>(null!)

export default function {{.name}}({ children }: { children: React.ReactNode }) {
  const value = useMemo(() => ({}), [])
  return <Context.Provider value={value}>{children}</Context.Provider>
}

export function use{{.name}}() {
  const context = useContext(Context)
  if (!context) {
    throw new Error('use{{.name}}must be used within a {{.name}}')
  }
  return context
}
