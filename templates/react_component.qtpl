{% func ReactComponent(component string) -%}
{% code
	propName := ReactPropName(component)
-%}
import React from 'react';

export interface {%v propName %} {
}

function {%v component %}({}: {%v propName %}) {
}

export default {%v component %};
{% endfunc %}

{% func ReactSCSS(rootClass string) -%}
.{%v rootClass %}{}
{% endfunc %}

{% func ReactStory(component string) -%}
import React from "react";
import { ComponentMeta, ComponentStory } from "@storybook/react";
import {%v component %} from "./{%v component %}";

export default {
  title: "component/{%v component %}",
  component: {%v component %},
} as ComponentMeta<typeof {%v component %}>;

const Template: ComponentStory<typeof {%v component %}> = (args) => <{%v component %} {...args} />;

export const Basic = Template.bind({});
{% endfunc %}

{% func ReactEmotion() -%}
{
	"presets": [
		"next/babel",
		"@emotion/babel-preset-css-prop"
	]
}
{% endfunc %}

{% stripspace %}
{% func ReactPropName(component string) %}
{%s component %}Props
{% endfunc %}
{% endstripspace %}

{% func ReactTest(component string) -%}
import "@testing-library/jest-dom";
import { fireEvent, render, screen } from "@testing-library/react";
import React from "react";
import {%v component %} from "./{%v component %}";

test("render test", async () => {
  render(<{%v component %} />);
});
{% endfunc %}